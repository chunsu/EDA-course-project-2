import(lattice)
demo()
library(lattice)
library(glmm)
library(MASS)
lm.glm
library(lm)
library(stats)
lm.glm
glm()
stats.lm
install.packages("RMySQL")
ucscDb <- dbConnect(MySQL(), user = 'genome', host="genome-mysql.cse.ucsc.edu")
library(RMySQL)
ucscDb <- dbConnect(MySQL(), user = 'genome', host="genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDb,"show databases;"); dbDisconnect(ucscDb)
result
hg19 <- dbConnect(MySQL(),user="genome", db="hg19", host="genome-mysql.cse.ucsc.edu")
allTables <- dbListTables(hg19)
length(allTables)
allTables[1:5]
dbDisconnect(hg19)
install.packages("httr")
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",key = "bcba591b40592425479c", secret = "936a3bdc296e9e037bbd9f2a8697aa8127b2a394")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos",gtoken)
stop_for_status(req)
content(req)
length(req)
str(req)
cc <- as.data.frame(req)
class(req)
install.packages("RMySQL")
install.packages("RMySQL")
install.packages("RMySQL")
install.packages("RMySQL")
install.packages("RMySQL")
library(RMySQL)
cc <- content(req)
oauth_endpoints("github")
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",key = "bcba591b40592425479c", secret = "936a3bdc296e9e037bbd9f2a8697aa8127b2a394")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos",gtoken)
cc = content(req)
class(cc)
summary(cc)
length(cc)
str(cc)
summary(cc)
class(cc)
cc[1][,1]
dim(cc)
cc[1,]
cc[[1,]]
cc[1,1:4
]
cc[[1]]
cc[[2]]
cc$names
cc$name
cc[[1]]$name
cc[[2]]$name
for(i in 1:30) {cc[[i]]$name}
for(i in 1:30) {print(cc[[i]]$name)}
for(i in 1:30) {print(i, cc[[i]]$name)}
for(i in 1:30) {print(cc[[i]]$name), print(i)}
for(i in 1:30) {print(cc[[i]]$name) print(i)}
for(i in 1:30) {print("n", cc[[i]]$name)}
for(i in 1:30) {print(cc[[i]]$name)}
sapply(cc,print(cc$name))
?print
for(i in 1:30) {print(c(i,cc[[i]]$name)}
for(i in 1:30) {print(c(i,cc[[i]]$name))}
cc[[17]]
install.packages("sqldf")
library(sqldf)
fileUrl <- https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(fileUrl,destfile = "house.csv",method="curl")
acs <- read.csv("house.csv")
class(acs)
summary(acs)
sqldf("select pwgtp1 from acs where AGEP \lt 50")
acs$AGEP
length(acs)
str(acs)
unique(acs$AGEP)
sqldf("select AGEP where unique from acs")
sqldf("select distinct AGEP from acs")
library(RMySQL)
sqldf("select distinct AGEP from acs")
sqldf("select AGEP where unique from acs")
dbSendQuery(acs)
?dbSendQuery
sqldf("select* from acs")
db <- dbConnect(SQLite(), dbname="acs.sqlite")
sqldf("attach 'acs.sqlite' as new")
mysqlconnection = dbConnect(MySQL(), user = 'root', password = '', dbname = 'acs.sqlite',
host = 'localhost')
mysqlconnection = dbConnect(MySQL(), user = 'root', password = '', dbname = 'sakila',
host = 'localhost')
library(RMySQL)
mysqlconnection = dbConnect(MySQL(), user = 'root', password = '', dbname = 'sakila',
host = 'localhost')
mysqlconnection = dbConnect(MySQL(), user = 'root', password = '', dbname = 'sakila',
host = '127.0.0.1' )
db <- dbConnect(SQLite(), dbname="acs.sqlite")
dbSendQuery(conn=db, sqldf("select* from acs"))
class(db)
sqldf("attach 'acs.sqlite' as new")
?sqldf
library("sqldf")
??red.csv
??read.csv
dir()
ls
ls()
acs2 <- read.csv.sql("house.csv")
?sqldf
sqldf("select* from acs2")
detach("package:RMySQL", unload = TRUE)
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select AGEP where unique from acs)
sqldf("select AGEP where unique from acs")
sqldf("select AGEP where unique from acs")
sqldf("select distinct AGEP from acs")
d <- sqldf("select pwgtp1 from acs where AGEP < 50")
length(d)
class(d)
str(d)
d$AGEP
class(acs)
summary(acs)
length(acs)
str(acs)
newdata <- acs$pwgtp1[ which(acs$AGEP <50), ]
newdata <- acs$pwgtp1[, which(acs$AGEP <50) ]
str(acs$pwgtp1)
newdata <- subset(acs$pwgtp1, acs$AGEP > 50)
newdata
length(newdata)
d <- sqldf("select pwgtp1 from acs where AGEP < 50")
length(d)
d
nrow(d)
newdata <- subset(acs$pwgtp1, acs$pwgtp1$AGEP > 50)
newdata <- subset(acs, acs$pwgtp1$AGEP > 50)
data <- acs[acs$AGEP < 50, acs$pwgtp1]
x <- subset(acs, acs$AGEP < 50, select = acs$pwgtp1 )
x <- subset(acs, acs$AGEP < 50, select = pwgtp1 )
x
nrow(x)
nrow(d)
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
library(XML)
install.packages(XML)
install.packages("XML")
library(XML)
htmlcode = readLines(con)
htmlcode
class(htmlcode)
str(htmlcode)
htmlcode[1]
htmlcode[10]
nchar(htmlcode[10])
nchar(htmlcode[20])
nchar(htmlcode[30])
nchar(htmlcode[100])
url <- "https://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"
download.file(url,destfile = "fwf.txt", method = "curl")
read.fwf("fwf.txt")
read.fwf("fwf.txt", fwf_empty(fwf, col_names = c("Nino1+2", "Nino3", "Nino34", "Nino4")))
head(fwf)
head("fwf.txt")
download.file(url,destfile = "fwf.csv", method = "curl")
fwf <- read.csv("fwf.csv")
head(fwf)
lenth(fwf)
length(fwf)
nrow(fwf)
url1 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
download.file(url,destfile = "fwf1.txt", method = "curl")
download.file(url,destfile = "fwf1.csv", method = "curl")
fwf1 <- read.csv("fwf1.csv")
length(fwf1)
nrow(fwf1)
download.file(url1,destfile = "fwf1.csv", method = "curl")
fwf1 <- read.csv("fwf1.csv")
nrow(fwf1)
head(fwf1)
fwf1 <- read.csv("fwf1.csv", header = TRUE)
nrow(fwf1)
head(fwf1)
?read.csv
read.fwf(fwf, fwf_empty(fwf, col_names = c("week", "SST", "SSTA", "SST", "SSTA","SST", "SSTA","SST", "SSTA"))
)
install.packages("readr")
library(readr)
read.fwf(fwf, fwf_empty(fwf, col_names = c("week", "SST", "SSTA", "SST", "SSTA","SST", "SSTA","SST", "SSTA")))
read.fwf("fwf1.csv", fwf_empty("fwf1.csv", col_names = c("week", "SST", "SSTA", "SST", "SSTA","SST", "SSTA","SST", "SSTA")))
read.fwf("fwf1.csv", skip =2, fwf_empty("fwf1.csv", col_names = c("week", "SST", "SSTA", "SST", "SSTA","SST", "SSTA","SST", "SSTA")))
x <- read.fwf(
file=url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"),
skip=4,
widths=c(12, 7, 4, 9, 4, 9, 4, 9, 4))
head(x)
sum(x$v4,na.rm=)
sum(x$v4)
sum(x$V4)
getwd()
setwd("Users/sue/Dropbox/R/EDA.git")
setwd("Users/sue/Dropbox/R")
setwd("/Users/sue/Dropbox/R")
setwd("/Users/sue/Dropbox/R/EDA.git")
dir()
setwd("/Users/sue/Dropbox/R/EDA.git/exdata_data_NEI_data")
dir()
data <- readRDS("summarySCC_PM25.rds")
str(Data)
str(data)
table(data$year)
table(data$Pollutant)
table(data$type)
summary(data$SCC)
SCC <- readRDS("Source_Classification_Code.rds")
str(SCC)
head(SCC)
summary(SCC)
tail(SCC)
str(SCC)
table(SCC$Data.Category)
table(SCC$Usage.Notes)
str(SCC)
str(data)
yearTotal <- split(data, data$year)
sapply(yearTotal$Emissions, sum)
head(yearTotal)
tt <- sapply(yearTotal$Emissions, sum)
tt
head(yearTotal$Emissions)
class(yearTotal)
str(yearTotal)
head(yearTotal[[Emissions]])
head(yearTotal[,Emissions])
?sapoly
?sapply
tt <- sapply(yearTotal, function(x) sum(yearTotal$Emissions))
t
tt
tt <- sapply(split(data,data$year), function(x) sum(data$Emissions))
tt
tt <- sapply(split(data,data$year), sum(data$Emissions))
tt <- sapply(split(data,data$year)$Emissions, sum
)
tt
tt <- sapply(split(data,data$year)$Emissions, sum)
tt
tt <- sapply(split(data,data$year), function(x) sum(data$Emissions))
tt
dir()
getwd()
setwd("/Users/sue/Dropbox/R")
dir()
setwd("/Users/sue/Dropbox/R/EDA-course-project-2")
dir()
dir("exdata_data_NEI_data")
tt
class(tt)
factor(tt)
levels(tt)
tt
names(tt)
plot(names(tt),tt, type = "l")
class(tt)
tt
plot(tt)
quantity <- c(3,5,2)
names(quantity) <- c("apples","bananas", "pears")
plot(quantity)
quantity
class(quantity)
names(quantity)
plot(tt)
tt <- sapply(split(data,data$year), function(x) colSums(x$Emissions))
tt <- sapply(split(data,data$year), function(x) colSums(data$Emissions))
tt <- sapply(split(data,data$year), function(x) colSums(data[,Emissions])
)
tt <- sapply(split(data,data$year), function(x) colSums(data$Emissions))
tt <- sapply(split(data,data$year), function(x) colSums(x[,"Emissions"])
)
tt
tt <- sapply(split(data,data$year), function(x) colSums(x[,Emissions]))
tt <- sapply(split(data,data$year), function(x) colSums(x$Emissions)
)
tt <- sapply(split(data,data$year), function(x) sum(x[,Emissions]))
tt <- sapply(split(data,data$year), function(x) sum(x[,"Emissions"]))
tt
tt <- sapply(split(data,data$year), function(x) sum(x[,"Emissions"]))
plot(tt)
library(dplyr)
by_year <- group_by(data,year)
total <- summarise(by_year, sum(Emissions))
total
total <- as.vector(summarise(by_year, sum(Emissions)))
total
names(total)
total <- as.vector(summarise(by_year, Emissions = sum(Emissions)))
total
total <- summarise(group_by(data,year), Emissions = sum(Emissions))
total
total <- summarise(group_by(data,year),Emissions = sum(Emissions))
total <- summarise(group_by(data,year),emissions = sum(Emissions))
total <- summarise(group_by(data,year),Emissions = sum(Emissions))
total
plot(tt)
plot(tt$year,tt$Emissions)
plot(total)
plot(total, xaxt = "n", xlab='year')
axis(1, at=1:4, labels= total$year)
total$year
plot(total, xaxt = "n", xlab='year')
axis(1, at=1:4, labels= total$year)
plot(total, xaxt = "n", xlab='year')
axis(1, at=1:4, labels= 1:4)
plot(total, xaxt = "n", xlab='year')
axis(1, at= 1:4, labels = 1:4
)
plot(total, xaxt = "n")
axis(1, at=1:4, labels= total$year)
plot(total)
axis(1, at=1:4, labels= total$year)
plot(total, xaxt = "n")
axis(1, at=1:4, labels= total$year)
plot(total, xaxt = "n")
axis(1, at=1:4, labels= letters[1:4])
axis(1, at=x, labels= letters[1:4])
plot(total, xaxt = "n")
axis(1, at=x, labels= letters[1:4])
axis(1, at=data$year, labels= letters[1:4])
axis(1, at=total$year, labels= letters[1:4])
axis(1, at=total$year, labels= total$year)
plot(total, type = "l", xaxt = "n")
axis(1, at=total$year, labels= total$year)
plot(total$year, total$Emissions, type = "l", xaxt = "n")
plot(total, type = "l", xaxt = "n")
axis(1, at=total$year, labels= total$year)
select(data, flips == "24510")
str(Data)
str(data)
select(data, fips == "24510")
filter(data, fips == "24510")
Baltimore <- filter(data, fips == "24510")
head(Baltimore)
nrow(Baltimore)
total <- summarise(group_by(Baltimore,year), Emissions = sum(Emissions))
plot(total)
str(data)
data %>%
group_by(year, type) %>%
summarise(Emissions = sum(Emissions))
data %>%
group_by(year, type) %>%
t <- summarise(Emissions = sum(Emissions))
t <- summarise(group_by(data,year,type),Emissions = sum(Emissions))
t
qplot(year, Emissions, data = total, color = factor(type),
geom=c("point", "smooth"))
library(ggplot)
install.packages('ggplot2')
library(ggplot)
library(ggplot2)
qplot(year, Emissions, data = total, color = factor(type),
geom=c("point", "smooth"))
t$type <- as.factor(t$type)
t
qplot(year, Emissions, data = total, color = factor(type),
geom=c("point", "smooth"))
qplot(year, Emissions, data = t, color = factor(type),
geom=c("point", "smooth"))
warnings()
qplot(year, Emissions, data = t, color = factor(type),
geom="point")
qplot(year, Emissions, data = t, color = factor(type),
geom="line")
